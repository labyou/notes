{"version":3,"sources":["components/Note.jsx","components/NotesList.jsx","components/AddNote.jsx","components/ChosenNote.jsx","App.js","reportWebVitals.js","index.js"],"names":["Note","id","title","text","time","date","setChosenNote","className","onClick","to","copyText","document","getElementById","navigator","clipboard","writeText","innerHTML","NotesList","notes","map","note","AddNote","handleAddNote","useState","noteTitle","setNoteTitle","noteText","setNoteText","name","cols","rows","placeholder","value","onChange","e","target","trim","length","ChosenNote","chosenNote","App","m","moment","setNotes","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","src","alt","exact","path","data","clone","newNote","nanoid","format","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c1ec5fd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Note({ id, title, text, time, date, setChosenNote }) {\r\n\tconst copyHandler = () => {\r\n\t\tlet copyText = document.getElementById(id);\r\n\t\tnavigator.clipboard.writeText(copyText.innerHTML);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"note\" onClick={() => setChosenNote(id) }>\r\n\t\t\t<Link to={`/note?title=${title}`}>\r\n\t\t\t\t<div className=\"note-content\">\r\n\t\t\t\t<span className=\"note-content-subject\">{title}</span>\r\n\t\t\t\t<span className=\"note-content-text\" id={ id }>{text}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"note-data\">\r\n\t\t\t\t\t<span className=\"note-data-time\">{time}</span>\r\n\t\t\t\t\t<span className=\"note-data-date\">{date}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t\t<div className=\"note-footer\">\r\n\t\t\t\t<i className=\"lab la-2x la-facebook-f facebook-icon\"></i>\r\n\t\t\t\t<i className=\"las la-2x la-copy\" onClick={ copyHandler }></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react'\r\n\r\nimport Note from './Note'\r\n\r\nexport default function NotesList({notes, setChosenNote}) {\r\n\treturn (\r\n\t\t<div className=\"notes-list\">\r\n\t\t\t{notes.map((note) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tid={note.id}\r\n\t\t\t\t\t\ttitle={note.title}\r\n\t\t\t\t\t\ttext={note.text}\r\n\t\t\t\t\t\ttime={note.time}\r\n\t\t\t\t\t\tdate={note.date}\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tsetChosenNote={setChosenNote}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function AddNote({ handleAddNote }) {\r\n    const [noteTitle, setNoteTitle] = useState('');\r\n    const [noteText, setNoteText] = useState('');\r\n    const handleSave = () => {\r\n        if (noteText.trim().length > 0 && noteTitle.trim().length > 0) {\r\n            handleAddNote({ noteTitle, noteText });\r\n            setNoteTitle('');\r\n            setNoteText('');\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"add-note-container\">\r\n            <span className=\"add-note-containet__header\">Create new note</span>\r\n            <textarea\r\n                name=\"\"\r\n                id=\"title\"\r\n                cols=\"30\"\r\n                rows=\"3\"\r\n                placeholder=\"Title\"\r\n                value={noteTitle}\r\n                onChange={(e) => {\r\n                    setNoteTitle(e.target.value);\r\n                }}\r\n            ></textarea>\r\n            <textarea\r\n                name=\"\"\r\n                id=\"text\"\r\n                cols=\"30\"\r\n                rows=\"10\"\r\n                placeholder=\"Text\"\r\n                value={noteText}\r\n                onChange={(e) => setNoteText(e.target.value)}\r\n            ></textarea>\r\n            <div className=\"save-button-container\">\r\n                <button className=\"save-button\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ChosenNote({ chosenNote }) {\r\n\tlet note = chosenNote();\r\n\tconst copyHandler = () => {\r\n\t\tlet copyText = document.getElementById(note.id);\r\n\t\tnavigator.clipboard.writeText(copyText.innerHTML);\r\n\t};\r\n    return (\r\n\t\t<div className=\"chosen-container\">\r\n\t\t\t<div className=\"chosen-note-content\">\r\n\t\t\t\t<h1 className=\"chosen-subject\">{note.title}</h1>\r\n\t\t\t\t<span className=\"chosen-text\" id={note.id}>{note.text}</span>\r\n\t\t\t<div className=\"chosen-note-data\">\r\n\t\t\t\t<span className=\"data-time\">{note.time}</span>\r\n\t\t\t\t<span className=\"data-date\">{note.date}</span>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"buttons-container\">\r\n\t\t\t\t<button className=\"copy-button\" onClick={ copyHandler }>Copy</button>\r\n\t\t\t\t<button className=\"share-button\">Share</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\n\nimport NotesList from './components/NotesList';\nimport AddNote from './components/AddNote';\nimport ChosenNote from './components/ChosenNote';\n\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\n\nexport default function App() {\n\tlet m = moment();\n\tconst [notes, setNotes] = useState([]);\n\tconst [chosenNote, setChosenNote] = useState();\n\tuseEffect(() => {\n\t\tconst savedNotes = JSON.parse(localStorage.getItem(\"react-notes-data\"));\n\t\tif (savedNotes) {\n\t\t\tsetNotes(savedNotes);\n\t\t};\n\t}, [])\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('react-notes-data', JSON.stringify(notes))\t\n\t}, [notes])\n\tconst addNote = ({ noteTitle, noteText }) => {\n\t\tlet data = m.clone();\n\t\tconst newNote = {\n\t\t\tid: nanoid(),\n\t\t\ttitle: noteTitle,\n\t\t\ttext: noteText,\n\t\t\ttime: data.format(\"h:mm a\"),\n\t\t\tdate: data.format(\"D MMMM YYYY\")\n\t\t};\n\t\tsetNotes([...notes, newNote]);\n\t}\n\n\tfunction getChosenNote() {\n\t\treturn notes.find((note) => note.id === chosenNote);\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t<div className=\"app\">\n\t\t\t\t<header className=\"app-header\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"app-header__logo\"\n\t\t\t\t\t\tsrc=\"http://simpleicon.com/wp-content/uploads/note-2.svg\"\n\t\t\t\t\t\talt=\"Note Logo\"\n\t\t\t\t\t/>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"app-header__icon\"\n\t\t\t\t\t\tsrc=\"http://simpleicon.com/wp-content/uploads/setting2.svg\"\n\t\t\t\t\t\talt=\"Settings Icon\"\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<AddNote handleAddNote={addNote} />\n\t\t\t\t\t\t<NotesList notes={notes} setChosenNote={setChosenNote} />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t{chosenNote ? (\n\t\t\t\t\t\t<Route exact path=\"/note\">\n\t\t\t\t\t\t\t<ChosenNote chosenNote={ getChosenNote} />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}